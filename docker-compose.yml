services:
  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    build:
      context: ./django
    volumes:
      - ./django/src:/app/src # rajouter du hot reloading et penser a enlever ce mount pour la production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4:8
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  prometheus:
    image: prom/prometheus:v2.51.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.0
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin # Nom d'utilisateur par défaut
      - GF_SECURITY_ADMIN_PASSWORD=admin # Mot de passe par défaut (à changer après le premier login)

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  prometheus_data:
  grafana_data: